<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated 2020-3-15 12:25:09 by Hibernate Tools 3.5.0.Final -->
<hibernate-mapping package="com.demo.hibernate.entities.many2onebothway">

    <class name="Customer" table="CUSTOMERS">
    
        <id name="customerId" type="java.lang.Integer">
            <column name="CUSTOMER_ID" />
            <generator class="native" />
        </id>
        
        <property name="customerName" type="java.lang.String">
            <column name="CUSTOMER_NAME" />
        </property>
        
        <!-- 映射 "1对多" 的那个集合属性 -->
        <!-- 
        	 set: 映射 set 类型的属性，
        	 table: set 中的元素 对应的记录放在哪一个数据表中。
        	                       该值需要和多对一的 n的那个表的名字一致。
        	 key: 指定 n的表中的 外键字段 的名字
        	 class: 指定映射类型
         -->
        <!-- inverse: 指定由哪一方来维护 关联关系，通常设置为 true，以指定由 n的一端 来维护关联关系。 -->
        <!-- cascade 设定 级联操作，可以取值：delete, delete-orphan, save-update 等
                                       开发时不建议 设定该属性，建议使用手工的方式来处理。 -->
        <!-- order-by 在查询时对集合中的元素进行排序，order-by 中使用的是表的 字段名，而不是持久化类的 属性名。 -->
        <!-- order-by 属性，是直接在数据库中排序。如果使用 sort 属性，需要在内存中排序（通过Java比较器Comparator），比较浪费内存。
        	   所以推荐使用 order-by 属性。 -->
        <set name="orders" table="ORDERS" inverse="true" cascade="save-update" order-by="ORDER_NAME DESC">
        	<key column="CUSTOMER_ID"></key>
        	<one-to-many class="Order"/>
        </set>
        
    </class>
    
</hibernate-mapping>
